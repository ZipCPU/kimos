################################################################################
##
## Filename:	autodata/clkcounter.txt
## {{{
## Project:	KIMOS, a Mercury KX2 demonstration project
##
## Purpose:	To describe the clkcounter's interface for autofpga to work
##		with.
##
## Creator:	Dan Gisselquist, Ph.D.
##		Gisselquist Technology, LLC
##
################################################################################
## }}}
## Copyright (C) 2022-2024, Gisselquist Technology, LLC
## {{{
## This file is part of the KIMOS project.
##
## The KIMOS project is free software and gateware: you can redistribute it
## and/or modify it under the terms of the GNU General Public License as
## published by the Free Software Foundation, either version 3 of the License,
## or (at your option) any later version.
##
## This program is distributed in the hope that it will be useful, but WITHOUT
## ANY WARRANTY; without even the implied warranty of MERCHANTIBILITY or
## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
## for more details.
##
## You should have received a copy of the GNU General Public License along
## with this program.  (It's in the $(ROOT)/doc directory, run make with no
## target there if the PDF file isn't present.)  If not, see
## <http://www.gnu.org/licenses/> for a copy.
## }}}
## License:	GPL, v3, as defined and found on www.gnu.org,
## {{{
##		http://www.gnu.org/licenses/gpl.html
##
################################################################################
##
## }}}
@PREFIX=sysclk
@DEVID=SYSCLK
@ACCESS=@$(DEVID)
@NADDR=	1
@SLAVE.TYPE=	SINGLE
@SLAVE.BUS=wb32
@TSTCLOCK=i_clk
# @SINGLE.INPUTS=	ck_pps
@MAIN.DEFNS=
	// Verilator lint_off UNUSED
	reg	r_@$(PREFIX)_ack;
	// Verilator lint_on  UNUSED
@MAIN.INSERT=
	clkcounter #(
		.CLOCKFREQ_HZ(0)	// We'll count PPS externally
	) clk@$(PREFIX)ctr(
		.i_sys_clk(i_clk),
		.i_tst_clk(@$(TSTCLOCK)),
		.i_sys_pps(ck_pps),
		.o_sys_counts(@$(SLAVE.PREFIX)_idata)
	);

	always @(posedge i_clk)
		r_@$(PREFIX)_ack <= !i_reset && @$(SLAVE.PREFIX)_stb;
	assign	@$(SLAVE.PREFIX)_ack   = r_@$(PREFIX)_ack;
	assign	@$(SLAVE.PREFIX)_stall = 1'b0;
@MAIN.ALT=
	assign	@$(SLAVE.PREFIX)_idata = 0;

	initial	r_@$(PREFIX)_ack = 1'b0;
	always @(*)
		r_@$(PREFIX)_ack = 1'b0;
@REGS.NOTE = // SYSCLK Clock Counter (measures clock speed)
@REGS.N = 1
@REGS.0 = 0 R_@$(DEVID) @$(DEVID)
@BDEF.IONAME=_@$(PREFIX)
@BDEF.IOTYPE= unsigned
@BDEF.OSVAL=static volatile @$(BDEF.IOTYPE) *const @$(BDEF.IONAME) = ((@$(BDEF.IOTYPE) *)@$[0x%08x](REGBASE));
@XDC.INSERT=
set_max_delay -datapath_only -from [get_cells -hier -filter {NAME=~ *clk@$(PREFIX)ctr/avgs*}]       -to [ get_cells -hier -filter {NAME =~*clk@$(PREFIX)ctr/q_v*}]   8.0
