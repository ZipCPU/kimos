################################################################################
##
## Filename:	autodata/gpio.txt
## {{{
## Project:	KIMOS, a Mercury KX2 demonstration project
##
## Purpose:	
##
## Creator:	Dan Gisselquist, Ph.D.
##		Gisselquist Technology, LLC
##
################################################################################
## }}}
## Copyright (C) 2021-2024, Gisselquist Technology, LLC
## {{{
## This file is part of the KIMOS project.
##
## The KIMOS project is free software and gateware: you can redistribute it
## and/or modify it under the terms of the GNU General Public License as
## published by the Free Software Foundation, either version 3 of the License,
## or (at your option) any later version.
##
## This program is distributed in the hope that it will be useful, but WITHOUT
## ANY WARRANTY; without even the implied warranty of MERCHANTIBILITY or
## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
## for more details.
##
## You should have received a copy of the GNU General Public License along
## with this program.  (It's in the $(ROOT)/doc directory, run make with no
## target there if the PDF file isn't present.)  If not, see
## <http://www.gnu.org/licenses/> for a copy.
## }}}
## License:	GPL, v3, as defined and found on www.gnu.org,
## {{{
##		http://www.gnu.org/licenses/gpl.html
##
################################################################################
##
## }}}
@PREFIX=gpio
@DEVID=GPIO
@NADDR=1
@ACCESS=@$(DEVID)_ACCESS
@SLAVE.TYPE=SINGLE
@SLAVE.BUS=wb32
@NUMOUTPUT=16
@NUMINPUT=2
@INT.GPIO.WIRE=gpio_int
@INT.GPIO.PIC=altpic
@TOP.PORTLIST=
		// @$(DEVID) ports
		o_sd_reset
@TOP.IODECL=
	// @$(DEVID) ports
	output	wire	o_sd_reset;
@TOP.DEFNS=
	// @$(DEVID) declarations.  The two wire busses are just virtual lists of
	// input (or output) ports.
	wire	[@$(NUMINPUT)-1:0]	i_@$(PREFIX);
	wire	[@$(NUMOUTPUT)-1:0]	o_@$(PREFIX);
@TOP.MAIN=
		// @$(DEVID) wires
		i_@$(PREFIX), o_@$(PREFIX)
@TOP.INSERT=
	assign	i_gpio = { 14'h0, sysclk_locked, !i_sd_cd_n };
	assign	o_sd_reset = o_gpio[0];
@MAIN.PORTLIST=
		// @$(DEVID) ports
		i_@$(PREFIX), o_@$(PREFIX)
@MAIN.IODECL=
	localparam	NGPI = @$(NUMINPUT), NGPO=@$(NUMOUTPUT);
	// @$(DEVID) ports
	input		[(NGPI-1):0]	i_@$(PREFIX);
	output	wire	[(NGPO-1):0]	o_@$(PREFIX);
@MAIN.DEFNS=
	wire	sd_reset;
@MAIN.INSERT=
	////////////////////////////////////////////////////////////////////////
	//
	// @$(DEVID)
	// {{{
	// This interface should allow us to control up to 16 @$(DEVID) inputs,
	// and another 16 @$(DEVID) outputs.  The interrupt trips when any of
	// the inputs changes.  (Sorry, which input isn't (yet) selectable.)
	//
	localparam	[NGPO-1:0] INITIAL_@$(DEVID) = @$(NUMOUTPUT)'h0;

	wbgpio	#(
		.NIN(NGPI), .NOUT(NGPO), .DEFAULT(INITIAL_@$(DEVID))
	) @$(PREFIX)i(
		// {{{
		i_clk, @$(SLAVE.PORTLIST),
		i_@$(PREFIX), o_@$(PREFIX), @$(PREFIX)_int
		// }}}
	);

	assign	sd_reset = o_@$(PREFIX)[0];
	// }}}
@REGS.N=1
@REGS.0= 0 R_@$(DEVID) @$(DEVID) GPI GPO
@BDEF.DEFN=
//
// @$(DEVID) input wires
//
#define	@$(DEVID)_SD_DETECTED	0x000010000
#define	@$(DEVID)_SYSCLK_LOCKED	0x000020000
//
// @$(DEVID) output wires
//
#define	@$(DEVID)_SET(WIRE)	(((WIRE)<<16)|(WIRE))
#define	@$(DEVID)_CLR(WIRE)	 ((WIRE)<<16)
//
#define	@$(DEVID)_SD_RESET		0x000000001
//
#define	@$(DEVID)_SD_RESET_SET	@$(DEVID)_SET(@$(DEVID)_SD_RESET)
#define	@$(DEVID)_SD_RESET_CLR	@$(DEVID)_CLR(@$(DEVID)_SD_RESET)
@BDEF.IONAME=	i_@$(PREFIX)
@BDEF.IOTYPE=	unsigned
@BDEF.OSDEF=	_BOARD_HAS_@$(DEVID)
@BDEF.OSVAL=	static volatile @$.BDEF.IOTYPE *const _@$(PREFIX) = ((@$.BDEF.IOTYPE *)@$[0x%08x](REGBASE));
@RTL.MAKE.FILES=wbgpio.v
@RTL.MAKE.GROUP=@$(DEVID)
